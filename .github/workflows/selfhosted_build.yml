trigger: none

pr:
  branches:
    include:
      - dev
      - release

pool:
  name: SegAPI

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
      - checkout: self
        displayName: '📥 Clonar el repositorio'
      
      - script: |
          cp src/app/nuget.config .
        displayName: '📋 Copiar nuget.config a la raíz'


      - task: NuGetCommand@2
        displayName: '🛠️ Restaurar paquetes NuGet'
        inputs:
          command: 'restore'
          restoreSolution: '**/*.sln'
          feedsToUse: 'config'
          nugetConfigPath: 'src/app/nuget.config'

      - task: NuGetAuthenticate@1
        displayName: '🔑 Autenticación en Azure Artifacts'

      - task: UseDotNet@2
        displayName: '🧰 Instalar .NET 8 SDK'
        inputs:
          packageType: 'sdk'
          version: '8.0.x'
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - script: |
          dotnet restore src/app/app.csproj
          dotnet restore src/tests/appTests.csproj
        displayName: '🛠️ Restaurar dependencias'

      - script: |
          dotnet build src/app/app.csproj --no-restore --configuration $(buildConfiguration)
          dotnet build src/tests/appTests.csproj --no-restore --configuration $(buildConfiguration)
        displayName: '🧪 Compilar solución'

      - script: |
          dotnet test src/**/*Tests.csproj --no-build --verbosity normal || echo "No tests found"
        displayName: '✅ Ejecutar pruebas (si existen)'

      - script: |
          dotnet pack src/app/app.csproj --no-build -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/nuget /p:Version=1.0.$(Build.BuildId)
          dotnet pack src/tests/appTests.csproj --no-build -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/nuget /p:Version=1.0.$(Build.BuildId)
        displayName: '📦 Empaquetar NuGet'

      - script: |
          ls -la $(Build.ArtifactStagingDirectory)/nuget
        displayName: '🔍 Verificar paquetes NuGet generados'

      - script: |
          dotnet nuget push "$(Build.ArtifactStagingDirectory)/nuget/*.nupkg" --source "UVGenios" --api-key "az" --skip-duplicate
        displayName: '⬆️ Publicar paquete NuGet en feed UVGenios'

      - task: PublishBuildArtifacts@1
        displayName: '📤 Publicar artefactos para release'
        inputs:
          PathtoPublish: 'src/app/bin/$(buildConfiguration)/net8.0/publish'
          ArtifactName: 'functionapp'
          publishLocation: 'Container'

      - script: |
          dotnet publish src/app/app.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/functionapp
        displayName: '🚀 Publicar app para Azure Functions'

      - task: PublishBuildArtifacts@1
        displayName: '📤 Publicar artefactos de Azure Functions'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/functionapp'
          ArtifactName: 'functionapp'
          publishLocation: 'Container'
